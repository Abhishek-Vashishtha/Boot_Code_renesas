/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* http://www.renesas.com/disclaimer                                          */
/*                                                                            */
/* Device     : RL78/R5F10MMG                                                 */
/* File Name  : iodefine.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : V1.02  [Device File version]                                  */
/* Options    : -df=C:\Program Files\Renesas Electronics\CS+\CC\Device\RL78\D */
/*              evicefile\DR5F10MMG.DVF -o=D:\Project Work\GAP15A\iodefine.h  */
/*              -f                                                            */
/* Date       : 09/08/2015                                                    */
/* Version    : V1.04.00.04  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R5F10MMGIODEFINE_HEADER__
#define __R5F10MMGIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define ADM2         (*(volatile __near unsigned char  *)0x10)
#define ADM2_bit     (*(volatile __near __bitf_T *)0x10)
#define ADTYP        (((volatile __near __bitf_T *)0x10)->no0)
#define AWC          (((volatile __near __bitf_T *)0x10)->no2)
#define ADRCK        (((volatile __near __bitf_T *)0x10)->no3)
#define ADUL         (*(volatile __near unsigned char  *)0x11)
#define ADLL         (*(volatile __near unsigned char  *)0x12)
#define ADTES        (*(volatile __near unsigned char  *)0x13)
#define PU0          (*(volatile __near unsigned char  *)0x30)
#define PU0_bit      (*(volatile __near __bitf_T *)0x30)
#define PU1          (*(volatile __near unsigned char  *)0x31)
#define PU1_bit      (*(volatile __near __bitf_T *)0x31)
#define PU3          (*(volatile __near unsigned char  *)0x33)
#define PU3_bit      (*(volatile __near __bitf_T *)0x33)
#define PU4          (*(volatile __near unsigned char  *)0x34)
#define PU4_bit      (*(volatile __near __bitf_T *)0x34)
#define PU7          (*(volatile __near unsigned char  *)0x37)
#define PU7_bit      (*(volatile __near __bitf_T *)0x37)
#define PU8          (*(volatile __near unsigned char  *)0x38)
#define PU8_bit      (*(volatile __near __bitf_T *)0x38)
#define PU12         (*(volatile __near unsigned char  *)0x3C)
#define PU12_bit     (*(volatile __near __bitf_T *)0x3C)
#define PIM0         (*(volatile __near unsigned char  *)0x40)
#define PIM0_bit     (*(volatile __near __bitf_T *)0x40)
#define PIM1         (*(volatile __near unsigned char  *)0x41)
#define PIM1_bit     (*(volatile __near __bitf_T *)0x41)
#define PIM8         (*(volatile __near unsigned char  *)0x48)
#define PIM8_bit     (*(volatile __near __bitf_T *)0x48)
#define POM0         (*(volatile __near unsigned char  *)0x50)
#define POM0_bit     (*(volatile __near __bitf_T *)0x50)
#define POM1         (*(volatile __near unsigned char  *)0x51)
#define POM1_bit     (*(volatile __near __bitf_T *)0x51)
#define POM8         (*(volatile __near unsigned char  *)0x58)
#define POM8_bit     (*(volatile __near __bitf_T *)0x58)
#define NFEN0        (*(volatile __near unsigned char  *)0x70)
#define NFEN0_bit    (*(volatile __near __bitf_T *)0x70)
#define NFEN1        (*(volatile __near unsigned char  *)0x71)
#define NFEN1_bit    (*(volatile __near __bitf_T *)0x71)
#define ISC          (*(volatile __near unsigned char  *)0x73)
#define ISC_bit      (*(volatile __near __bitf_T *)0x73)
#define TIS0         (*(volatile __near unsigned char  *)0x74)
#define ADPC         (*(volatile __near unsigned char  *)0x76)
#define PIOR         (*(volatile __near unsigned char  *)0x77)
#define IAWCTL       (*(volatile __near unsigned char  *)0x78)
#define PER1         (*(volatile __near unsigned char  *)0x7A)
#define PER1_bit     (*(volatile __near __bitf_T *)0x7A)
#define DSADCEN      (((volatile __near __bitf_T *)0x7A)->no0)
#define DTCEN        (((volatile __near __bitf_T *)0x7A)->no3)
#define OSDCEN       (((volatile __near __bitf_T *)0x7A)->no4)
#define CMPEN        (((volatile __near __bitf_T *)0x7A)->no5)
#define FMCEN        (((volatile __near __bitf_T *)0x7A)->no6)
#define TMKAEN       (((volatile __near __bitf_T *)0x7A)->no7)
#define PMS          (*(volatile __near unsigned char  *)0x7B)
#define PMS_bit      (*(volatile __near __bitf_T *)0x7B)
#define GDIDIS       (*(volatile __near unsigned char  *)0x7D)
#define GDIDIS_bit   (*(volatile __near __bitf_T *)0x7D)
#define DSADRTR      (*(volatile __near unsigned char  *)0x94)
#define PCKC         (*(volatile __near unsigned char  *)0x98)
#define PCKC_bit     (*(volatile __near __bitf_T *)0x98)
#define DSADCK       (((volatile __near __bitf_T *)0x98)->no0)
#define HOCODIV      (*(volatile __near unsigned char  *)0xA8)
#define TEMPCAL0     (*(volatile __near unsigned char  *)0xAC)
#define TEMPCAL1     (*(volatile __near unsigned char  *)0xAD)
#define TEMPCAL2     (*(volatile __near unsigned char  *)0xAE)
#define TEMPCAL3     (*(volatile __near unsigned char  *)0xAF)
#define PER0         (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit     (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN       (((volatile __near __bitf_T *)0xF0)->no0)
#define SAU0EN       (((volatile __near __bitf_T *)0xF0)->no2)
#define SAU1EN       (((volatile __near __bitf_T *)0xF0)->no3)
#define IICA0EN      (((volatile __near __bitf_T *)0xF0)->no4)
#define ADCEN        (((volatile __near __bitf_T *)0xF0)->no5)
#define IRDAEN       (((volatile __near __bitf_T *)0xF0)->no6)
#define RTCWEN       (((volatile __near __bitf_T *)0xF0)->no7)
#define OSMC         (*(volatile __near unsigned char  *)0xF3)
#define RMC          (*(volatile __near unsigned char  *)0xF4)
#define RMC_bit      (*(volatile __near __bitf_T *)0xF4)
#define WDVOL        (((volatile __near __bitf_T *)0xF4)->no7)
#define RPECTL       (*(volatile __near unsigned char  *)0xF5)
#define RPECTL_bit   (*(volatile __near __bitf_T *)0xF5)
#define RPEF         (((volatile __near __bitf_T *)0xF5)->no0)
#define RPERDIS      (((volatile __near __bitf_T *)0xF5)->no7)
#define PORSR        (*(volatile __near unsigned char  *)0xF9)
#define PORSR_bit    (*(volatile __near __bitf_T *)0xF9)
#define BCDADJ       (*(volatile __near unsigned char  *)0xFE)
#define SSR00        (*(volatile __near unsigned short *)0x100)
#define SSR00L       (*(volatile __near unsigned char  *)0x100)
#define SSR01        (*(volatile __near unsigned short *)0x102)
#define SSR01L       (*(volatile __near unsigned char  *)0x102)
#define SSR02        (*(volatile __near unsigned short *)0x104)
#define SSR02L       (*(volatile __near unsigned char  *)0x104)
#define SSR03        (*(volatile __near unsigned short *)0x106)
#define SSR03L       (*(volatile __near unsigned char  *)0x106)
#define SIR00        (*(volatile __near unsigned short *)0x108)
#define SIR00L       (*(volatile __near unsigned char  *)0x108)
#define SIR01        (*(volatile __near unsigned short *)0x10A)
#define SIR01L       (*(volatile __near unsigned char  *)0x10A)
#define SIR02        (*(volatile __near unsigned short *)0x10C)
#define SIR02L       (*(volatile __near unsigned char  *)0x10C)
#define SIR03        (*(volatile __near unsigned short *)0x10E)
#define SIR03L       (*(volatile __near unsigned char  *)0x10E)
#define SMR00        (*(volatile __near unsigned short *)0x110)
#define SMR01        (*(volatile __near unsigned short *)0x112)
#define SMR02        (*(volatile __near unsigned short *)0x114)
#define SMR03        (*(volatile __near unsigned short *)0x116)
#define SCR00        (*(volatile __near unsigned short *)0x118)
#define SCR01        (*(volatile __near unsigned short *)0x11A)
#define SCR02        (*(volatile __near unsigned short *)0x11C)
#define SCR03        (*(volatile __near unsigned short *)0x11E)
#define SE0          (*(volatile __near unsigned short *)0x120)
#define SE0L         (*(volatile __near unsigned char  *)0x120)
#define SE0L_bit     (*(volatile __near __bitf_T *)0x120)
#define SS0          (*(volatile __near unsigned short *)0x122)
#define SS0L         (*(volatile __near unsigned char  *)0x122)
#define SS0L_bit     (*(volatile __near __bitf_T *)0x122)
#define ST0          (*(volatile __near unsigned short *)0x124)
#define ST0L         (*(volatile __near unsigned char  *)0x124)
#define ST0L_bit     (*(volatile __near __bitf_T *)0x124)
#define SPS0         (*(volatile __near unsigned short *)0x126)
#define SPS0L        (*(volatile __near unsigned char  *)0x126)
#define SO0          (*(volatile __near unsigned short *)0x128)
#define SOE0         (*(volatile __near unsigned short *)0x12A)
#define SOE0L        (*(volatile __near unsigned char  *)0x12A)
#define SOE0L_bit    (*(volatile __near __bitf_T *)0x12A)
#define SOL0         (*(volatile __near unsigned short *)0x134)
#define SOL0L        (*(volatile __near unsigned char  *)0x134)
#define SSC0         (*(volatile __near unsigned short *)0x138)
#define SSC0L        (*(volatile __near unsigned char  *)0x138)
#define SSR10        (*(volatile __near unsigned short *)0x140)
#define SSR10L       (*(volatile __near unsigned char  *)0x140)
#define SSR11        (*(volatile __near unsigned short *)0x142)
#define SSR11L       (*(volatile __near unsigned char  *)0x142)
#define SIR10        (*(volatile __near unsigned short *)0x148)
#define SIR10L       (*(volatile __near unsigned char  *)0x148)
#define SIR11        (*(volatile __near unsigned short *)0x14A)
#define SIR11L       (*(volatile __near unsigned char  *)0x14A)
#define SMR10        (*(volatile __near unsigned short *)0x150)
#define SMR11        (*(volatile __near unsigned short *)0x152)
#define SCR10        (*(volatile __near unsigned short *)0x158)
#define SCR11        (*(volatile __near unsigned short *)0x15A)
#define SE1          (*(volatile __near unsigned short *)0x160)
#define SE1L         (*(volatile __near unsigned char  *)0x160)
#define SE1L_bit     (*(volatile __near __bitf_T *)0x160)
#define SS1          (*(volatile __near unsigned short *)0x162)
#define SS1L         (*(volatile __near unsigned char  *)0x162)
#define SS1L_bit     (*(volatile __near __bitf_T *)0x162)
#define ST1          (*(volatile __near unsigned short *)0x164)
#define ST1L         (*(volatile __near unsigned char  *)0x164)
#define ST1L_bit     (*(volatile __near __bitf_T *)0x164)
#define SPS1         (*(volatile __near unsigned short *)0x166)
#define SPS1L        (*(volatile __near unsigned char  *)0x166)
#define SO1          (*(volatile __near unsigned short *)0x168)
#define SOE1         (*(volatile __near unsigned short *)0x16A)
#define SOE1L        (*(volatile __near unsigned char  *)0x16A)
#define SOE1L_bit    (*(volatile __near __bitf_T *)0x16A)
#define SOL1         (*(volatile __near unsigned short *)0x174)
#define SOL1L        (*(volatile __near unsigned char  *)0x174)
#define SSC1         (*(volatile __near unsigned short *)0x178)
#define SSC1L        (*(volatile __near unsigned char  *)0x178)
#define TCR00        (*(volatile __near unsigned short *)0x180)
#define TCR01        (*(volatile __near unsigned short *)0x182)
#define TCR02        (*(volatile __near unsigned short *)0x184)
#define TCR03        (*(volatile __near unsigned short *)0x186)
#define TCR04        (*(volatile __near unsigned short *)0x188)
#define TCR05        (*(volatile __near unsigned short *)0x18A)
#define TCR06        (*(volatile __near unsigned short *)0x18C)
#define TCR07        (*(volatile __near unsigned short *)0x18E)
#define TMR00        (*(volatile __near unsigned short *)0x190)
#define TMR01        (*(volatile __near unsigned short *)0x192)
#define TMR02        (*(volatile __near unsigned short *)0x194)
#define TMR03        (*(volatile __near unsigned short *)0x196)
#define TMR04        (*(volatile __near unsigned short *)0x198)
#define TMR05        (*(volatile __near unsigned short *)0x19A)
#define TMR06        (*(volatile __near unsigned short *)0x19C)
#define TMR07        (*(volatile __near unsigned short *)0x19E)
#define TSR00        (*(volatile __near unsigned short *)0x1A0)
#define TSR00L       (*(volatile __near unsigned char  *)0x1A0)
#define TSR01        (*(volatile __near unsigned short *)0x1A2)
#define TSR01L       (*(volatile __near unsigned char  *)0x1A2)
#define TSR02        (*(volatile __near unsigned short *)0x1A4)
#define TSR02L       (*(volatile __near unsigned char  *)0x1A4)
#define TSR03        (*(volatile __near unsigned short *)0x1A6)
#define TSR03L       (*(volatile __near unsigned char  *)0x1A6)
#define TSR04        (*(volatile __near unsigned short *)0x1A8)
#define TSR04L       (*(volatile __near unsigned char  *)0x1A8)
#define TSR05        (*(volatile __near unsigned short *)0x1AA)
#define TSR05L       (*(volatile __near unsigned char  *)0x1AA)
#define TSR06        (*(volatile __near unsigned short *)0x1AC)
#define TSR06L       (*(volatile __near unsigned char  *)0x1AC)
#define TSR07        (*(volatile __near unsigned short *)0x1AE)
#define TSR07L       (*(volatile __near unsigned char  *)0x1AE)
#define TE0          (*(volatile __near unsigned short *)0x1B0)
#define TE0L         (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit     (*(volatile __near __bitf_T *)0x1B0)
#define TS0          (*(volatile __near unsigned short *)0x1B2)
#define TS0L         (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit     (*(volatile __near __bitf_T *)0x1B2)
#define TT0          (*(volatile __near unsigned short *)0x1B4)
#define TT0L         (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit     (*(volatile __near __bitf_T *)0x1B4)
#define TPS0         (*(volatile __near unsigned short *)0x1B6)
#define TO0          (*(volatile __near unsigned short *)0x1B8)
#define TO0L         (*(volatile __near unsigned char  *)0x1B8)
#define TOE0         (*(volatile __near unsigned short *)0x1BA)
#define TOE0L        (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit    (*(volatile __near __bitf_T *)0x1BA)
#define TOL0         (*(volatile __near unsigned short *)0x1BC)
#define TOL0L        (*(volatile __near unsigned char  *)0x1BC)
#define TOM0         (*(volatile __near unsigned short *)0x1BE)
#define TOM0L        (*(volatile __near unsigned char  *)0x1BE)
#define IICCTL00     (*(volatile __near unsigned char  *)0x230)
#define IICCTL00_bit (*(volatile __near __bitf_T *)0x230)
#define SPT0         (((volatile __near __bitf_T *)0x230)->no0)
#define STT0         (((volatile __near __bitf_T *)0x230)->no1)
#define ACKE0        (((volatile __near __bitf_T *)0x230)->no2)
#define WTIM0        (((volatile __near __bitf_T *)0x230)->no3)
#define SPIE0        (((volatile __near __bitf_T *)0x230)->no4)
#define WREL0        (((volatile __near __bitf_T *)0x230)->no5)
#define LREL0        (((volatile __near __bitf_T *)0x230)->no6)
#define IICE0        (((volatile __near __bitf_T *)0x230)->no7)
#define IICCTL01     (*(volatile __near unsigned char  *)0x231)
#define IICCTL01_bit (*(volatile __near __bitf_T *)0x231)
#define PRS0         (((volatile __near __bitf_T *)0x231)->no0)
#define DFC0         (((volatile __near __bitf_T *)0x231)->no2)
#define SMC0         (((volatile __near __bitf_T *)0x231)->no3)
#define DAD0         (((volatile __near __bitf_T *)0x231)->no4)
#define CLD0         (((volatile __near __bitf_T *)0x231)->no5)
#define WUP0         (((volatile __near __bitf_T *)0x231)->no7)
#define IICWL0       (*(volatile __near unsigned char  *)0x232)
#define IICWH0       (*(volatile __near unsigned char  *)0x233)
#define SVA0         (*(volatile __near unsigned char  *)0x234)
#define OSDC         (*(volatile __near unsigned short *)0x2D0)
#define HOCOFC       (*(volatile __near unsigned char  *)0x2D8)
#define CRFTRIM      (*(volatile __near unsigned char  *)0x2D9)
#define DTCBAR       (*(volatile __near unsigned char  *)0x2E0)
#define DTCEN0       (*(volatile __near unsigned char  *)0x2E8)
#define DTCEN0_bit   (*(volatile __near __bitf_T *)0x2E8)
#define DTCEN00      (((volatile __near __bitf_T *)0x2E8)->no0)
#define DTCEN01      (((volatile __near __bitf_T *)0x2E8)->no1)
#define DTCEN02      (((volatile __near __bitf_T *)0x2E8)->no2)
#define DTCEN03      (((volatile __near __bitf_T *)0x2E8)->no3)
#define DTCEN04      (((volatile __near __bitf_T *)0x2E8)->no4)
#define DTCEN05      (((volatile __near __bitf_T *)0x2E8)->no5)
#define DTCEN06      (((volatile __near __bitf_T *)0x2E8)->no6)
#define DTCEN07      (((volatile __near __bitf_T *)0x2E8)->no7)
#define DTCEN1       (*(volatile __near unsigned char  *)0x2E9)
#define DTCEN1_bit   (*(volatile __near __bitf_T *)0x2E9)
#define DTCEN10      (((volatile __near __bitf_T *)0x2E9)->no0)
#define DTCEN11      (((volatile __near __bitf_T *)0x2E9)->no1)
#define DTCEN12      (((volatile __near __bitf_T *)0x2E9)->no2)
#define DTCEN13      (((volatile __near __bitf_T *)0x2E9)->no3)
#define DTCEN14      (((volatile __near __bitf_T *)0x2E9)->no4)
#define DTCEN15      (((volatile __near __bitf_T *)0x2E9)->no5)
#define DTCEN16      (((volatile __near __bitf_T *)0x2E9)->no6)
#define DTCEN17      (((volatile __near __bitf_T *)0x2E9)->no7)
#define DTCEN2       (*(volatile __near unsigned char  *)0x2EA)
#define DTCEN2_bit   (*(volatile __near __bitf_T *)0x2EA)
#define DTCEN20      (((volatile __near __bitf_T *)0x2EA)->no0)
#define DTCEN21      (((volatile __near __bitf_T *)0x2EA)->no1)
#define DTCEN22      (((volatile __near __bitf_T *)0x2EA)->no2)
#define DTCEN23      (((volatile __near __bitf_T *)0x2EA)->no3)
#define DTCEN24      (((volatile __near __bitf_T *)0x2EA)->no4)
#define DTCEN25      (((volatile __near __bitf_T *)0x2EA)->no5)
#define DTCEN26      (((volatile __near __bitf_T *)0x2EA)->no6)
#define DTCEN27      (((volatile __near __bitf_T *)0x2EA)->no7)
#define DTCEN3       (*(volatile __near unsigned char  *)0x2EB)
#define DTCEN3_bit   (*(volatile __near __bitf_T *)0x2EB)
#define DTCEN30      (((volatile __near __bitf_T *)0x2EB)->no0)
#define DTCEN31      (((volatile __near __bitf_T *)0x2EB)->no1)
#define DTCEN32      (((volatile __near __bitf_T *)0x2EB)->no2)
#define DTCEN33      (((volatile __near __bitf_T *)0x2EB)->no3)
#define DTCEN34      (((volatile __near __bitf_T *)0x2EB)->no4)
#define DTCEN35      (((volatile __near __bitf_T *)0x2EB)->no5)
#define DTCEN36      (((volatile __near __bitf_T *)0x2EB)->no6)
#define DTCEN37      (((volatile __near __bitf_T *)0x2EB)->no7)
#define DTCEN4       (*(volatile __near unsigned char  *)0x2EC)
#define DTCEN4_bit   (*(volatile __near __bitf_T *)0x2EC)
#define DTCEN40      (((volatile __near __bitf_T *)0x2EC)->no0)
#define DTCEN41      (((volatile __near __bitf_T *)0x2EC)->no1)
#define DTCEN42      (((volatile __near __bitf_T *)0x2EC)->no2)
#define DTCEN43      (((volatile __near __bitf_T *)0x2EC)->no3)
#define DTCEN44      (((volatile __near __bitf_T *)0x2EC)->no4)
#define DTCEN45      (((volatile __near __bitf_T *)0x2EC)->no5)
#define DTCEN46      (((volatile __near __bitf_T *)0x2EC)->no6)
#define DTCEN47      (((volatile __near __bitf_T *)0x2EC)->no7)
#define CRC0CTL      (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit  (*(volatile __near __bitf_T *)0x2F0)
#define CRC0EN       (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL       (*(volatile __near unsigned short *)0x2F2)
#define CRCD         (*(volatile __near unsigned short *)0x2FA)
#define PFSEG0       (*(volatile __near unsigned char  *)0x300)
#define PFSEG0_bit   (*(volatile __near __bitf_T *)0x300)
#define PFSEG1       (*(volatile __near unsigned char  *)0x301)
#define PFSEG1_bit   (*(volatile __near __bitf_T *)0x301)
#define PFSEG2       (*(volatile __near unsigned char  *)0x302)
#define PFSEG2_bit   (*(volatile __near __bitf_T *)0x302)
#define PFSEG3       (*(volatile __near unsigned char  *)0x303)
#define PFSEG3_bit   (*(volatile __near __bitf_T *)0x303)
#define PFSEG4       (*(volatile __near unsigned char  *)0x304)
#define PFSEG4_bit   (*(volatile __near __bitf_T *)0x304)
#define ISCLCD       (*(volatile __near unsigned char  *)0x308)
#define ISCLCD_bit   (*(volatile __near __bitf_T *)0x308)
#define SUBCUD       (*(volatile __near unsigned short *)0x310)
#define FMCRL        (*(volatile __near unsigned short *)0x312)
#define FMCRH        (*(volatile __near unsigned short *)0x314)
#define FMCTL        (*(volatile __near unsigned char  *)0x316)
#define FMCTL_bit    (*(volatile __near __bitf_T *)0x316)
#define FMS          (((volatile __near __bitf_T *)0x316)->no7)
#define BUPCTL0      (*(volatile __near unsigned char  *)0x330)
#define BUPCTL0_bit  (*(volatile __near __bitf_T *)0x330)
#define VBATSEL      (((volatile __near __bitf_T *)0x330)->no0)
#define VBATIS       (((volatile __near __bitf_T *)0x330)->no1)
#define VBATIE       (((volatile __near __bitf_T *)0x330)->no2)
#define VBATCMPM     (((volatile __near __bitf_T *)0x330)->no3)
#define VBATEN       (((volatile __near __bitf_T *)0x330)->no7)
#define BUPCTL1      (*(volatile __near unsigned char  *)0x331)
#define BUPCTL1_bit  (*(volatile __near __bitf_T *)0x331)
#define BUPPRT       (((volatile __near __bitf_T *)0x331)->no7)
#define COMPMDR      (*(volatile __near unsigned char  *)0x340)
#define COMPMDR_bit  (*(volatile __near __bitf_T *)0x340)
#define C0ENB        (((volatile __near __bitf_T *)0x340)->no0)
#define C0MON        (((volatile __near __bitf_T *)0x340)->no3)
#define C1ENB        (((volatile __near __bitf_T *)0x340)->no4)
#define C1MON        (((volatile __near __bitf_T *)0x340)->no7)
#define COMPFIR      (*(volatile __near unsigned char  *)0x341)
#define COMPFIR_bit  (*(volatile __near __bitf_T *)0x341)
#define COMPOCR      (*(volatile __near unsigned char  *)0x342)
#define COMPOCR_bit  (*(volatile __near __bitf_T *)0x342)
#define C0IE         (((volatile __near __bitf_T *)0x342)->no0)
#define C0OE         (((volatile __near __bitf_T *)0x342)->no1)
#define C0OP         (((volatile __near __bitf_T *)0x342)->no2)
#define C1IE         (((volatile __near __bitf_T *)0x342)->no4)
#define C1OE         (((volatile __near __bitf_T *)0x342)->no5)
#define C1OP         (((volatile __near __bitf_T *)0x342)->no6)
#define SPDMD        (((volatile __near __bitf_T *)0x342)->no7)
#define TRTCMP0      (*(volatile __near unsigned short *)0x350)
#define TRTCMP00     (*(volatile __near unsigned char  *)0x350)
#define TRTCMP01     (*(volatile __near unsigned char  *)0x351)
#define TRTCR0       (*(volatile __near unsigned char  *)0x352)
#define TRTCR0_bit   (*(volatile __near __bitf_T *)0x352)
#define TSTART00     (((volatile __near __bitf_T *)0x352)->no0)
#define TSTART01     (((volatile __near __bitf_T *)0x352)->no2)
#define TRTMD0       (*(volatile __near unsigned char  *)0x353)
#define TRTMD0_bit   (*(volatile __near __bitf_T *)0x353)
#define TRTCMP1      (*(volatile __near unsigned short *)0x358)
#define TRTCMP10     (*(volatile __near unsigned char  *)0x358)
#define TRTCMP11     (*(volatile __near unsigned char  *)0x359)
#define TRTCR1       (*(volatile __near unsigned char  *)0x35A)
#define TRTCR1_bit   (*(volatile __near __bitf_T *)0x35A)
#define TSTART10     (((volatile __near __bitf_T *)0x35A)->no0)
#define TSTART11     (((volatile __near __bitf_T *)0x35A)->no2)
#define TRTMD1       (*(volatile __near unsigned char  *)0x35B)
#define TRTMD1_bit   (*(volatile __near __bitf_T *)0x35B)
#define IRCR         (*(volatile __near unsigned char  *)0x3A0)
#define IRCR_bit     (*(volatile __near __bitf_T *)0x3A0)
#define IRRXINV      (((volatile __near __bitf_T *)0x3A0)->no2)
#define IRTXINV      (((volatile __near __bitf_T *)0x3A0)->no3)
#define IRCKS0       (((volatile __near __bitf_T *)0x3A0)->no4)
#define IRCKS1       (((volatile __near __bitf_T *)0x3A0)->no5)
#define IRCKS2       (((volatile __near __bitf_T *)0x3A0)->no6)
#define IRE          (((volatile __near __bitf_T *)0x3A0)->no7)
#define TMPCTL       (*(volatile __near unsigned char  *)0x3B0)
#define TMPCTL_bit   (*(volatile __near __bitf_T *)0x3B0)
#define TMPSEL0      (((volatile __near __bitf_T *)0x3B0)->no0)
#define TMPSEL1      (((volatile __near __bitf_T *)0x3B0)->no1)
#define TMPEN        (((volatile __near __bitf_T *)0x3B0)->no7)
#define DSADMR       (*(volatile __near unsigned short *)0x3C0)
#define DSADGCR0     (*(volatile __near unsigned char  *)0x3C2)
#define DSADGCR1     (*(volatile __near unsigned char  *)0x3C3)
#define DSADHPFCR    (*(volatile __near unsigned char  *)0x3C5)
#define DSADPHCR0    (*(volatile __near unsigned short *)0x3C6)
#define DSADPHCR1    (*(volatile __near unsigned short *)0x3C8)
#define DSADCR0      (*(volatile __near unsigned short *)0x3D0)
#define DSADCR0L     (*(volatile __near unsigned char  *)0x3D0)
#define DSADCR0M     (*(volatile __near unsigned char  *)0x3D1)
#define DSADCR0H     (*(volatile __near unsigned char  *)0x3D2)
#define DSADCR1      (*(volatile __near unsigned short *)0x3D4)
#define DSADCR1L     (*(volatile __near unsigned char  *)0x3D4)
#define DSADCR1M     (*(volatile __near unsigned char  *)0x3D5)
#define DSADCR1H     (*(volatile __near unsigned char  *)0x3D6)
#define DSADCR2      (*(volatile __near unsigned short *)0x3D8)
#define DSADCR2L     (*(volatile __near unsigned char  *)0x3D8)
#define DSADCR2M     (*(volatile __near unsigned char  *)0x3D9)
#define DSADCR2H     (*(volatile __near unsigned char  *)0x3DA)
#define DSADCR3      (*(volatile __near unsigned short *)0x3DC)
#define DSADCR3L     (*(volatile __near unsigned char  *)0x3DC)
#define DSADCR3M     (*(volatile __near unsigned char  *)0x3DD)
#define DSADCR3H     (*(volatile __near unsigned char  *)0x3DE)
#define SEG0         (*(volatile __near unsigned char  *)0x400)
#define SEG1         (*(volatile __near unsigned char  *)0x401)
#define SEG2         (*(volatile __near unsigned char  *)0x402)
#define SEG3         (*(volatile __near unsigned char  *)0x403)
#define SEG4         (*(volatile __near unsigned char  *)0x404)
#define SEG5         (*(volatile __near unsigned char  *)0x405)
#define SEG6         (*(volatile __near unsigned char  *)0x406)
#define SEG7         (*(volatile __near unsigned char  *)0x407)
#define SEG8         (*(volatile __near unsigned char  *)0x408)
#define SEG9         (*(volatile __near unsigned char  *)0x409)
#define SEG10        (*(volatile __near unsigned char  *)0x40A)
#define SEG11        (*(volatile __near unsigned char  *)0x40B)
#define SEG12        (*(volatile __near unsigned char  *)0x40C)
#define SEG13        (*(volatile __near unsigned char  *)0x40D)
#define SEG14        (*(volatile __near unsigned char  *)0x40E)
#define SEG15        (*(volatile __near unsigned char  *)0x40F)
#define SEG16        (*(volatile __near unsigned char  *)0x410)
#define SEG17        (*(volatile __near unsigned char  *)0x411)
#define SEG18        (*(volatile __near unsigned char  *)0x412)
#define SEG19        (*(volatile __near unsigned char  *)0x413)
#define SEG20        (*(volatile __near unsigned char  *)0x414)
#define SEG21        (*(volatile __near unsigned char  *)0x415)
#define SEG22        (*(volatile __near unsigned char  *)0x416)
#define SEG23        (*(volatile __near unsigned char  *)0x417)
#define SEG24        (*(volatile __near unsigned char  *)0x418)
#define SEG25        (*(volatile __near unsigned char  *)0x419)
#define SEG26        (*(volatile __near unsigned char  *)0x41A)
#define SEG27        (*(volatile __near unsigned char  *)0x41B)
#define SEG28        (*(volatile __near unsigned char  *)0x41C)
#define SEG29        (*(volatile __near unsigned char  *)0x41D)
#define SEG30        (*(volatile __near unsigned char  *)0x41E)
#define SEG31        (*(volatile __near unsigned char  *)0x41F)
#define SEG32        (*(volatile __near unsigned char  *)0x420)
#define SEG33        (*(volatile __near unsigned char  *)0x421)
#define SEG34        (*(volatile __near unsigned char  *)0x422)
#define SEG35        (*(volatile __near unsigned char  *)0x423)
#define SEG36        (*(volatile __near unsigned char  *)0x424)
#define SEG37        (*(volatile __near unsigned char  *)0x425)
#define SEG38        (*(volatile __near unsigned char  *)0x426)
#define SEG39        (*(volatile __near unsigned char  *)0x427)
#define SEG40        (*(volatile __near unsigned char  *)0x428)
#define SEG41        (*(volatile __near unsigned char  *)0x429)
#define TRT0         (*(volatile __near unsigned short *)0x540)
#define TRT00        (*(volatile __near unsigned char  *)0x540)
#define TRT01        (*(volatile __near unsigned char  *)0x541)
#define TRT1         (*(volatile __near unsigned short *)0x548)
#define TRT10        (*(volatile __near unsigned char  *)0x548)
#define TRT11        (*(volatile __near unsigned char  *)0x549)
#define P0           (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit       (*(volatile __near __bitf_T *)0xFF00)
#define P1           (*(volatile __near unsigned char  *)0xFF01)
#define P1_bit       (*(volatile __near __bitf_T *)0xFF01)
#define P2           (*(volatile __near unsigned char  *)0xFF02)
#define P2_bit       (*(volatile __near __bitf_T *)0xFF02)
#define P3           (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit       (*(volatile __near __bitf_T *)0xFF03)
#define P4           (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit       (*(volatile __near __bitf_T *)0xFF04)
#define P6           (*(volatile __near unsigned char  *)0xFF06)
#define P6_bit       (*(volatile __near __bitf_T *)0xFF06)
#define P7           (*(volatile __near unsigned char  *)0xFF07)
#define P7_bit       (*(volatile __near __bitf_T *)0xFF07)
#define P8           (*(volatile __near unsigned char  *)0xFF08)
#define P8_bit       (*(volatile __near __bitf_T *)0xFF08)
#define P12          (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit      (*(volatile __near __bitf_T *)0xFF0C)
#define P13          (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit      (*(volatile __near __bitf_T *)0xFF0D)
#define SDR00        (*(volatile __near unsigned short *)0xFF10)
#define SIO00        (*(volatile __near unsigned char  *)0xFF10)
#define TXD0         (*(volatile __near unsigned char  *)0xFF10)
#define SDR01        (*(volatile __near unsigned short *)0xFF12)
#define RXD0         (*(volatile __near unsigned char  *)0xFF12)
#define TDR00        (*(volatile __near unsigned short *)0xFF18)
#define TDR01        (*(volatile __near unsigned short *)0xFF1A)
#define TDR01L       (*(volatile __near unsigned char  *)0xFF1A)
#define TDR01H       (*(volatile __near unsigned char  *)0xFF1B)
#define ADCR         (*(volatile __near unsigned short *)0xFF1E)
#define ADCRH        (*(volatile __near unsigned char  *)0xFF1F)
#define PM0          (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit      (*(volatile __near __bitf_T *)0xFF20)
#define PM1          (*(volatile __near unsigned char  *)0xFF21)
#define PM1_bit      (*(volatile __near __bitf_T *)0xFF21)
#define PM2          (*(volatile __near unsigned char  *)0xFF22)
#define PM2_bit      (*(volatile __near __bitf_T *)0xFF22)
#define PM3          (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit      (*(volatile __near __bitf_T *)0xFF23)
#define PM4          (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit      (*(volatile __near __bitf_T *)0xFF24)
#define PM6          (*(volatile __near unsigned char  *)0xFF26)
#define PM6_bit      (*(volatile __near __bitf_T *)0xFF26)
#define PM7          (*(volatile __near unsigned char  *)0xFF27)
#define PM7_bit      (*(volatile __near __bitf_T *)0xFF27)
#define PM8          (*(volatile __near unsigned char  *)0xFF28)
#define PM8_bit      (*(volatile __near __bitf_T *)0xFF28)
#define PM12         (*(volatile __near unsigned char  *)0xFF2C)
#define PM12_bit     (*(volatile __near __bitf_T *)0xFF2C)
#define ADM0         (*(volatile __near unsigned char  *)0xFF30)
#define ADM0_bit     (*(volatile __near __bitf_T *)0xFF30)
#define ADCE         (((volatile __near __bitf_T *)0xFF30)->no0)
#define ADCS         (((volatile __near __bitf_T *)0xFF30)->no7)
#define ADS          (*(volatile __near unsigned char  *)0xFF31)
#define ADS_bit      (*(volatile __near __bitf_T *)0xFF31)
#define ADM1         (*(volatile __near unsigned char  *)0xFF32)
#define ADM1_bit     (*(volatile __near __bitf_T *)0xFF32)
#define EGP0         (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit     (*(volatile __near __bitf_T *)0xFF38)
#define EGN0         (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit     (*(volatile __near __bitf_T *)0xFF39)
#define LCDM0        (*(volatile __near unsigned char  *)0xFF40)
#define LCDM1        (*(volatile __near unsigned char  *)0xFF41)
#define LCDM1_bit    (*(volatile __near __bitf_T *)0xFF41)
#define LCDVLM       (((volatile __near __bitf_T *)0xFF41)->no0)
#define LCDSEL       (((volatile __near __bitf_T *)0xFF41)->no3)
#define BLON         (((volatile __near __bitf_T *)0xFF41)->no4)
#define VLCON        (((volatile __near __bitf_T *)0xFF41)->no5)
#define SCOC         (((volatile __near __bitf_T *)0xFF41)->no6)
#define LCDON        (((volatile __near __bitf_T *)0xFF41)->no7)
#define LCDC0        (*(volatile __near unsigned char  *)0xFF42)
#define VLCD         (*(volatile __near unsigned char  *)0xFF43)
#define SDR02        (*(volatile __near unsigned short *)0xFF44)
#define SIO10        (*(volatile __near unsigned char  *)0xFF44)
#define TXD1         (*(volatile __near unsigned char  *)0xFF44)
#define SDR03        (*(volatile __near unsigned short *)0xFF46)
#define RXD1         (*(volatile __near unsigned char  *)0xFF46)
#define SDR10        (*(volatile __near unsigned short *)0xFF48)
#define TXD2         (*(volatile __near unsigned char  *)0xFF48)
#define SDR11        (*(volatile __near unsigned short *)0xFF4A)
#define RXD2         (*(volatile __near unsigned char  *)0xFF4A)
#define MLCD         (*(volatile __near unsigned char  *)0xFF4C)
#define MLCD_bit     (*(volatile __near __bitf_T *)0xFF4C)
#define OPTCKE       (((volatile __near __bitf_T *)0xFF4C)->no4)
#define COMEXP       (((volatile __near __bitf_T *)0xFF4C)->no6)
#define LCTZS        (((volatile __near __bitf_T *)0xFF4C)->no7)
#define IICA0        (*(volatile __near unsigned char  *)0xFF50)
#define IICS0        (*(volatile __near unsigned char  *)0xFF51)
#define IICS0_bit    (*(volatile __near __bitf_T *)0xFF51)
#define SPD0         (((volatile __near __bitf_T *)0xFF51)->no0)
#define STD0         (((volatile __near __bitf_T *)0xFF51)->no1)
#define ACKD0        (((volatile __near __bitf_T *)0xFF51)->no2)
#define TRC0         (((volatile __near __bitf_T *)0xFF51)->no3)
#define COI0         (((volatile __near __bitf_T *)0xFF51)->no4)
#define EXC0         (((volatile __near __bitf_T *)0xFF51)->no5)
#define ALD0         (((volatile __near __bitf_T *)0xFF51)->no6)
#define MSTS0        (((volatile __near __bitf_T *)0xFF51)->no7)
#define IICF0        (*(volatile __near unsigned char  *)0xFF52)
#define IICF0_bit    (*(volatile __near __bitf_T *)0xFF52)
#define IICRSV0      (((volatile __near __bitf_T *)0xFF52)->no0)
#define STCEN0       (((volatile __near __bitf_T *)0xFF52)->no1)
#define IICBSY0      (((volatile __near __bitf_T *)0xFF52)->no6)
#define STCF0        (((volatile __near __bitf_T *)0xFF52)->no7)
#define TDR02        (*(volatile __near unsigned short *)0xFF64)
#define TDR03        (*(volatile __near unsigned short *)0xFF66)
#define TDR03L       (*(volatile __near unsigned char  *)0xFF66)
#define TDR03H       (*(volatile __near unsigned char  *)0xFF67)
#define TDR04        (*(volatile __near unsigned short *)0xFF68)
#define TDR05        (*(volatile __near unsigned short *)0xFF6A)
#define TDR06        (*(volatile __near unsigned short *)0xFF6C)
#define TDR07        (*(volatile __near unsigned short *)0xFF6E)
#define ITMC         (*(volatile __near unsigned short *)0xFF90)
#define SEC          (*(volatile __near unsigned char  *)0xFF92)
#define MIN          (*(volatile __near unsigned char  *)0xFF93)
#define HOUR         (*(volatile __near unsigned char  *)0xFF94)
#define WEEK         (*(volatile __near unsigned char  *)0xFF95)
#define DAY          (*(volatile __near unsigned char  *)0xFF96)
#define MONTH        (*(volatile __near unsigned char  *)0xFF97)
#define YEAR         (*(volatile __near unsigned char  *)0xFF98)
#define ALARMWM      (*(volatile __near unsigned char  *)0xFF9A)
#define ALARMWH      (*(volatile __near unsigned char  *)0xFF9B)
#define ALARMWW      (*(volatile __near unsigned char  *)0xFF9C)
#define RTCC0        (*(volatile __near unsigned char  *)0xFF9D)
#define RTCC0_bit    (*(volatile __near __bitf_T *)0xFF9D)
#define RCLOE1       (((volatile __near __bitf_T *)0xFF9D)->no5)
#define RCLOSEL      (((volatile __near __bitf_T *)0xFF9D)->no6)
#define RTCE         (((volatile __near __bitf_T *)0xFF9D)->no7)
#define RTCC1        (*(volatile __near unsigned char  *)0xFF9E)
#define RTCC1_bit    (*(volatile __near __bitf_T *)0xFF9E)
#define RWAIT        (((volatile __near __bitf_T *)0xFF9E)->no0)
#define RWST         (((volatile __near __bitf_T *)0xFF9E)->no1)
#define RIFG         (((volatile __near __bitf_T *)0xFF9E)->no3)
#define WAFG         (((volatile __near __bitf_T *)0xFF9E)->no4)
#define RITE         (((volatile __near __bitf_T *)0xFF9E)->no5)
#define WALIE        (((volatile __near __bitf_T *)0xFF9E)->no6)
#define WALE         (((volatile __near __bitf_T *)0xFF9E)->no7)
#define CMC          (*(volatile __near unsigned char  *)0xFFA0)
#define CSC          (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit      (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP      (((volatile __near __bitf_T *)0xFFA1)->no0)
#define XTSTOP       (((volatile __near __bitf_T *)0xFFA1)->no6)
#define MSTOP        (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC         (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit     (*(volatile __near __bitf_T *)0xFFA2)
#define OSTS         (*(volatile __near unsigned char  *)0xFFA3)
#define CKC          (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit      (*(volatile __near __bitf_T *)0xFFA4)
#define SDIV         (((volatile __near __bitf_T *)0xFFA4)->no3)
#define MCM0         (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS          (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS          (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS          (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0         (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit     (*(volatile __near __bitf_T *)0xFFA5)
#define PCLOE0       (((volatile __near __bitf_T *)0xFFA5)->no7)
#define CKS1         (*(volatile __near unsigned char  *)0xFFA6)
#define CKS1_bit     (*(volatile __near __bitf_T *)0xFFA6)
#define PCLOE1       (((volatile __near __bitf_T *)0xFFA6)->no7)
#define RESF         (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM         (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit     (*(volatile __near __bitf_T *)0xFFA9)
#define LVIF         (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVIOMSK      (((volatile __near __bitf_T *)0xFFA9)->no1)
#define LVISEN       (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS         (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit     (*(volatile __near __bitf_T *)0xFFAA)
#define LVILV        (((volatile __near __bitf_T *)0xFFAA)->no0)
#define LVIMD        (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE         (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN        (*(volatile __near unsigned char  *)0xFFAC)
#define IF2          (*(volatile __near unsigned short *)0xFFD0)
#define IF2L         (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit     (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H         (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit     (*(volatile __near __bitf_T *)0xFFD1)
#define DSAIF        (((volatile __near __bitf_T *)0xFFD0)->no0)
#define TMIF04       (((volatile __near __bitf_T *)0xFFD0)->no1)
#define TMIF05       (((volatile __near __bitf_T *)0xFFD0)->no2)
#define PIF6         (((volatile __near __bitf_T *)0xFFD0)->no3)
#define PIF7         (((volatile __near __bitf_T *)0xFFD0)->no4)
#define CMPIF0       (((volatile __near __bitf_T *)0xFFD0)->no6)
#define CMPIF1       (((volatile __near __bitf_T *)0xFFD0)->no7)
#define TMIF06       (((volatile __near __bitf_T *)0xFFD1)->no0)
#define TMIF07       (((volatile __near __bitf_T *)0xFFD1)->no1)
#define ITIF00       (((volatile __near __bitf_T *)0xFFD1)->no2)
#define ITIF01       (((volatile __near __bitf_T *)0xFFD1)->no3)
#define CRIF         (((volatile __near __bitf_T *)0xFFD1)->no4)
#define OSDIF        (((volatile __near __bitf_T *)0xFFD1)->no6)
#define FLIF         (((volatile __near __bitf_T *)0xFFD1)->no7)
#define IF3          (*(volatile __near unsigned short *)0xFFD2)
#define IF3L         (*(volatile __near unsigned char  *)0xFFD2)
#define IF3L_bit     (*(volatile __near __bitf_T *)0xFFD2)
#define ITIF10       (((volatile __near __bitf_T *)0xFFD2)->no2)
#define ITIF11       (((volatile __near __bitf_T *)0xFFD2)->no3)
#define VBAIF        (((volatile __near __bitf_T *)0xFFD2)->no4)
#define MK2          (*(volatile __near unsigned short *)0xFFD4)
#define MK2L         (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit     (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H         (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit     (*(volatile __near __bitf_T *)0xFFD5)
#define DSAMK        (((volatile __near __bitf_T *)0xFFD4)->no0)
#define TMMK04       (((volatile __near __bitf_T *)0xFFD4)->no1)
#define TMMK05       (((volatile __near __bitf_T *)0xFFD4)->no2)
#define PMK6         (((volatile __near __bitf_T *)0xFFD4)->no3)
#define PMK7         (((volatile __near __bitf_T *)0xFFD4)->no4)
#define CMPMK0       (((volatile __near __bitf_T *)0xFFD4)->no6)
#define CMPMK1       (((volatile __near __bitf_T *)0xFFD4)->no7)
#define TMMK06       (((volatile __near __bitf_T *)0xFFD5)->no0)
#define TMMK07       (((volatile __near __bitf_T *)0xFFD5)->no1)
#define ITMK00       (((volatile __near __bitf_T *)0xFFD5)->no2)
#define ITMK01       (((volatile __near __bitf_T *)0xFFD5)->no3)
#define CRMK         (((volatile __near __bitf_T *)0xFFD5)->no4)
#define OSDMK        (((volatile __near __bitf_T *)0xFFD5)->no6)
#define FLMK         (((volatile __near __bitf_T *)0xFFD5)->no7)
#define MK3          (*(volatile __near unsigned short *)0xFFD6)
#define MK3L         (*(volatile __near unsigned char  *)0xFFD6)
#define MK3L_bit     (*(volatile __near __bitf_T *)0xFFD6)
#define ITMK10       (((volatile __near __bitf_T *)0xFFD6)->no2)
#define ITMK11       (((volatile __near __bitf_T *)0xFFD6)->no3)
#define VBAMK        (((volatile __near __bitf_T *)0xFFD6)->no4)
#define PR02         (*(volatile __near unsigned short *)0xFFD8)
#define PR02L        (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit    (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H        (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit    (*(volatile __near __bitf_T *)0xFFD9)
#define DSAPR0       (((volatile __near __bitf_T *)0xFFD8)->no0)
#define TMPR004      (((volatile __near __bitf_T *)0xFFD8)->no1)
#define TMPR005      (((volatile __near __bitf_T *)0xFFD8)->no2)
#define PPR06        (((volatile __near __bitf_T *)0xFFD8)->no3)
#define PPR07        (((volatile __near __bitf_T *)0xFFD8)->no4)
#define CMPPR00      (((volatile __near __bitf_T *)0xFFD8)->no6)
#define CMPPR01      (((volatile __near __bitf_T *)0xFFD8)->no7)
#define TMPR006      (((volatile __near __bitf_T *)0xFFD9)->no0)
#define TMPR007      (((volatile __near __bitf_T *)0xFFD9)->no1)
#define ITPR000      (((volatile __near __bitf_T *)0xFFD9)->no2)
#define ITPR001      (((volatile __near __bitf_T *)0xFFD9)->no3)
#define CRPR0        (((volatile __near __bitf_T *)0xFFD9)->no4)
#define OSDPR0       (((volatile __near __bitf_T *)0xFFD9)->no6)
#define FLPR0        (((volatile __near __bitf_T *)0xFFD9)->no7)
#define PR03         (*(volatile __near unsigned short *)0xFFDA)
#define PR03L        (*(volatile __near unsigned char  *)0xFFDA)
#define PR03L_bit    (*(volatile __near __bitf_T *)0xFFDA)
#define ITPR010      (((volatile __near __bitf_T *)0xFFDA)->no2)
#define ITPR011      (((volatile __near __bitf_T *)0xFFDA)->no3)
#define VBAPR0       (((volatile __near __bitf_T *)0xFFDA)->no4)
#define PR12         (*(volatile __near unsigned short *)0xFFDC)
#define PR12L        (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit    (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H        (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit    (*(volatile __near __bitf_T *)0xFFDD)
#define DSAPR1       (((volatile __near __bitf_T *)0xFFDC)->no0)
#define TMPR104      (((volatile __near __bitf_T *)0xFFDC)->no1)
#define TMPR105      (((volatile __near __bitf_T *)0xFFDC)->no2)
#define PPR16        (((volatile __near __bitf_T *)0xFFDC)->no3)
#define PPR17        (((volatile __near __bitf_T *)0xFFDC)->no4)
#define CMPPR10      (((volatile __near __bitf_T *)0xFFDC)->no6)
#define CMPPR11      (((volatile __near __bitf_T *)0xFFDC)->no7)
#define TMPR106      (((volatile __near __bitf_T *)0xFFDD)->no0)
#define TMPR107      (((volatile __near __bitf_T *)0xFFDD)->no1)
#define ITPR100      (((volatile __near __bitf_T *)0xFFDD)->no2)
#define ITPR101      (((volatile __near __bitf_T *)0xFFDD)->no3)
#define CRPR1        (((volatile __near __bitf_T *)0xFFDD)->no4)
#define OSDPR1       (((volatile __near __bitf_T *)0xFFDD)->no6)
#define FLPR1        (((volatile __near __bitf_T *)0xFFDD)->no7)
#define PR13         (*(volatile __near unsigned short *)0xFFDE)
#define PR13L        (*(volatile __near unsigned char  *)0xFFDE)
#define PR13L_bit    (*(volatile __near __bitf_T *)0xFFDE)
#define ITPR110      (((volatile __near __bitf_T *)0xFFDE)->no2)
#define ITPR111      (((volatile __near __bitf_T *)0xFFDE)->no3)
#define VBAPR1       (((volatile __near __bitf_T *)0xFFDE)->no4)
#define IF0          (*(volatile __near unsigned short *)0xFFE0)
#define IF0L         (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit     (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H         (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit     (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF       (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF        (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0         (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1         (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2         (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3         (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4         (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5         (((volatile __near __bitf_T *)0xFFE0)->no7)
#define STIF2        (((volatile __near __bitf_T *)0xFFE1)->no0)
#define SRIF2        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SREIF2       (((volatile __near __bitf_T *)0xFFE1)->no2)
#define CSIIF00      (((volatile __near __bitf_T *)0xFFE1)->no5)
#define IICIF00      (((volatile __near __bitf_T *)0xFFE1)->no5)
#define STIF0        (((volatile __near __bitf_T *)0xFFE1)->no5)
#define TMIF00       (((volatile __near __bitf_T *)0xFFE1)->no6)
#define SRIF0        (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1          (*(volatile __near unsigned short *)0xFFE2)
#define IF1L         (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit     (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H         (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit     (*(volatile __near __bitf_T *)0xFFE3)
#define SREIF0       (((volatile __near __bitf_T *)0xFFE2)->no0)
#define TMIF01H      (((volatile __near __bitf_T *)0xFFE2)->no0)
#define IICIF10      (((volatile __near __bitf_T *)0xFFE2)->no1)
#define STIF1        (((volatile __near __bitf_T *)0xFFE2)->no1)
#define SRIF1        (((volatile __near __bitf_T *)0xFFE2)->no2)
#define SREIF1       (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF03H      (((volatile __near __bitf_T *)0xFFE2)->no3)
#define IICAIF0      (((volatile __near __bitf_T *)0xFFE2)->no4)
#define RTITIF       (((volatile __near __bitf_T *)0xFFE2)->no5)
#define FMIF         (((volatile __near __bitf_T *)0xFFE2)->no6)
#define TMIF01       (((volatile __near __bitf_T *)0xFFE2)->no7)
#define TMIF02       (((volatile __near __bitf_T *)0xFFE3)->no0)
#define TMIF03       (((volatile __near __bitf_T *)0xFFE3)->no1)
#define ADIF         (((volatile __near __bitf_T *)0xFFE3)->no2)
#define RTCIF        (((volatile __near __bitf_T *)0xFFE3)->no3)
#define TMKAIF       (((volatile __near __bitf_T *)0xFFE3)->no4)
#define MK0          (*(volatile __near unsigned short *)0xFFE4)
#define MK0L         (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit     (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H         (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit     (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK       (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK        (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0         (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1         (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2         (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3         (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4         (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5         (((volatile __near __bitf_T *)0xFFE4)->no7)
#define STMK2        (((volatile __near __bitf_T *)0xFFE5)->no0)
#define SRMK2        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SREMK2       (((volatile __near __bitf_T *)0xFFE5)->no2)
#define CSIMK00      (((volatile __near __bitf_T *)0xFFE5)->no5)
#define IICMK00      (((volatile __near __bitf_T *)0xFFE5)->no5)
#define STMK0        (((volatile __near __bitf_T *)0xFFE5)->no5)
#define TMMK00       (((volatile __near __bitf_T *)0xFFE5)->no6)
#define SRMK0        (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1          (*(volatile __near unsigned short *)0xFFE6)
#define MK1L         (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit     (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H         (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit     (*(volatile __near __bitf_T *)0xFFE7)
#define SREMK0       (((volatile __near __bitf_T *)0xFFE6)->no0)
#define TMMK01H      (((volatile __near __bitf_T *)0xFFE6)->no0)
#define IICMK10      (((volatile __near __bitf_T *)0xFFE6)->no1)
#define STMK1        (((volatile __near __bitf_T *)0xFFE6)->no1)
#define SRMK1        (((volatile __near __bitf_T *)0xFFE6)->no2)
#define SREMK1       (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK03H      (((volatile __near __bitf_T *)0xFFE6)->no3)
#define IICAMK0      (((volatile __near __bitf_T *)0xFFE6)->no4)
#define RTITMK       (((volatile __near __bitf_T *)0xFFE6)->no5)
#define FMMK         (((volatile __near __bitf_T *)0xFFE6)->no6)
#define TMMK01       (((volatile __near __bitf_T *)0xFFE6)->no7)
#define TMMK02       (((volatile __near __bitf_T *)0xFFE7)->no0)
#define TMMK03       (((volatile __near __bitf_T *)0xFFE7)->no1)
#define ADMK         (((volatile __near __bitf_T *)0xFFE7)->no2)
#define RTCMK        (((volatile __near __bitf_T *)0xFFE7)->no3)
#define TMKAMK       (((volatile __near __bitf_T *)0xFFE7)->no4)
#define PR00         (*(volatile __near unsigned short *)0xFFE8)
#define PR00L        (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit    (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H        (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit    (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0      (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0       (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00        (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01        (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02        (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03        (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04        (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05        (((volatile __near __bitf_T *)0xFFE8)->no7)
#define STPR02       (((volatile __near __bitf_T *)0xFFE9)->no0)
#define SRPR02       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SREPR02      (((volatile __near __bitf_T *)0xFFE9)->no2)
#define CSIPR000     (((volatile __near __bitf_T *)0xFFE9)->no5)
#define IICPR000     (((volatile __near __bitf_T *)0xFFE9)->no5)
#define STPR00       (((volatile __near __bitf_T *)0xFFE9)->no5)
#define TMPR000      (((volatile __near __bitf_T *)0xFFE9)->no6)
#define SRPR00       (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01         (*(volatile __near unsigned short *)0xFFEA)
#define PR01L        (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit    (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H        (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit    (*(volatile __near __bitf_T *)0xFFEB)
#define SREPR00      (((volatile __near __bitf_T *)0xFFEA)->no0)
#define TMPR001H     (((volatile __near __bitf_T *)0xFFEA)->no0)
#define IICPR010     (((volatile __near __bitf_T *)0xFFEA)->no1)
#define STPR01       (((volatile __near __bitf_T *)0xFFEA)->no1)
#define SRPR01       (((volatile __near __bitf_T *)0xFFEA)->no2)
#define SREPR01      (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR003H     (((volatile __near __bitf_T *)0xFFEA)->no3)
#define IICAPR00     (((volatile __near __bitf_T *)0xFFEA)->no4)
#define RTITPR0      (((volatile __near __bitf_T *)0xFFEA)->no5)
#define FMPR0        (((volatile __near __bitf_T *)0xFFEA)->no6)
#define TMPR001      (((volatile __near __bitf_T *)0xFFEA)->no7)
#define TMPR002      (((volatile __near __bitf_T *)0xFFEB)->no0)
#define TMPR003      (((volatile __near __bitf_T *)0xFFEB)->no1)
#define ADPR0        (((volatile __near __bitf_T *)0xFFEB)->no2)
#define RTCPR0       (((volatile __near __bitf_T *)0xFFEB)->no3)
#define TMKAPR0      (((volatile __near __bitf_T *)0xFFEB)->no4)
#define PR10         (*(volatile __near unsigned short *)0xFFEC)
#define PR10L        (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit    (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H        (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit    (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1      (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1       (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10        (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11        (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12        (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13        (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14        (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15        (((volatile __near __bitf_T *)0xFFEC)->no7)
#define STPR12       (((volatile __near __bitf_T *)0xFFED)->no0)
#define SRPR12       (((volatile __near __bitf_T *)0xFFED)->no1)
#define SREPR12      (((volatile __near __bitf_T *)0xFFED)->no2)
#define CSIPR100     (((volatile __near __bitf_T *)0xFFED)->no5)
#define IICPR100     (((volatile __near __bitf_T *)0xFFED)->no5)
#define STPR10       (((volatile __near __bitf_T *)0xFFED)->no5)
#define TMPR100      (((volatile __near __bitf_T *)0xFFED)->no6)
#define SRPR10       (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11         (*(volatile __near unsigned short *)0xFFEE)
#define PR11L        (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit    (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H        (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit    (*(volatile __near __bitf_T *)0xFFEF)
#define SREPR10      (((volatile __near __bitf_T *)0xFFEE)->no0)
#define TMPR101H     (((volatile __near __bitf_T *)0xFFEE)->no0)
#define IICPR110     (((volatile __near __bitf_T *)0xFFEE)->no1)
#define STPR11       (((volatile __near __bitf_T *)0xFFEE)->no1)
#define SRPR11       (((volatile __near __bitf_T *)0xFFEE)->no2)
#define SREPR11      (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR103H     (((volatile __near __bitf_T *)0xFFEE)->no3)
#define IICAPR10     (((volatile __near __bitf_T *)0xFFEE)->no4)
#define RTITPR1      (((volatile __near __bitf_T *)0xFFEE)->no5)
#define FMPR1        (((volatile __near __bitf_T *)0xFFEE)->no6)
#define TMPR101      (((volatile __near __bitf_T *)0xFFEE)->no7)
#define TMPR102      (((volatile __near __bitf_T *)0xFFEF)->no0)
#define TMPR103      (((volatile __near __bitf_T *)0xFFEF)->no1)
#define ADPR1        (((volatile __near __bitf_T *)0xFFEF)->no2)
#define RTCPR1       (((volatile __near __bitf_T *)0xFFEF)->no3)
#define TMKAPR1      (((volatile __near __bitf_T *)0xFFEF)->no4)
#define MACRL        (*(volatile __near unsigned short *)0xFFF0)
#define MACRH        (*(volatile __near unsigned short *)0xFFF2)
#define PMC          (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit      (*(volatile __near __bitf_T *)0xFFFE)
#define MAA          (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTST2                          0x0014
#define INTSR2                          0x0016
#define INTSRE2                         0x0018
#define INTCSI00                        0x001E
#define INTIIC00                        0x001E
#define INTST0                          0x001E
#define INTTM00                         0x0020
#define INTSR0                          0x0022
#define INTSRE0                         0x0024
#define INTTM01H                        0x0024
#define INTIIC10                        0x0026
#define INTST1                          0x0026
#define INTSR1                          0x0028
#define INTSRE1                         0x002A
#define INTTM03H                        0x002A
#define INTIICA0                        0x002C
#define INTRTIT                         0x002E
#define INTFM                           0x0030
#define INTTM01                         0x0032
#define INTTM02                         0x0034
#define INTTM03                         0x0036
#define INTAD                           0x0038
#define INTRTC                          0x003A
#define INTIT                           0x003C
#define BBINT0                          0x0040
#define BBINT1                          0x0042
#define INTDSAD                         0x0044
#define INTTM04                         0x0046
#define INTTM05                         0x0048
#define INTP6                           0x004A
#define INTP7                           0x004C
#define INTLCD0                         0x004E
#define INTCMP0                         0x0050
#define INTCMP1                         0x0052
#define INTTM06                         0x0054
#define INTTM07                         0x0056
#define INTIT00                         0x0058
#define INTIT01                         0x005A
#define INTCR                           0x005C
#define INTOSDC                         0x0060
#define INTFL                           0x0062
#define BBINT14                         0x0064
#define BBINT15                         0x0066
#define INTIT10                         0x0068
#define INTIT11                         0x006A
#define INTVBAT                         0x006C

#endif
